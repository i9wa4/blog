[
  {
    "objectID": "drafts/2024-01-28-looking-for-a-new-job.html",
    "href": "drafts/2024-01-28-looking-for-a-new-job.html",
    "title": "転職活動を始めました",
    "section": "",
    "text": "こんにちは。i9wa4 です。\n今年 (2024年) 1月中旬から転職活動を始めたので今の気持ちを書き残しておきます。"
  },
  {
    "objectID": "drafts/2024-01-28-looking-for-a-new-job.html#転職活動を始めた理由",
    "href": "drafts/2024-01-28-looking-for-a-new-job.html#転職活動を始めた理由",
    "title": "転職活動を始めました",
    "section": "1. 転職活動を始めた理由",
    "text": "1. 転職活動を始めた理由\n転職活動に至った理由は以下です。\n\n今の働き方を評価されずモチベーションを維持できない\n成長できる環境を選びたい\n\n\n1.1. 今の働き方を評価されずモチベーションを維持できない\n私は機械学習基盤での業務経験が社内では一番長くなりました。会社の方針として機械学習基盤を含めた一気通貫のデータ分析ソリューション提供を目指しているので一定の評価を期待していましたが、実際は未経験で入社した当初と2年後の現在で給与は変わらず据え置きです。\nというのも会社の歴史的経緯から評価制度が営業マン・リーダー経験豊富な人材優遇なものとなっているためです。技術面での経験蓄積や社内還元は相対的に加点が小さいんですね。これではモチベーション維持が難しいです。\n安易に退職したくはなかったので評価制度の問題点を上長や社長に直接伝えてましたが、変える気はないようでした。 せっかくたくさん採用した中堅エンジニアの退職者が増えている最大の要因がこの評価制度だと個人的に思っています。しかも評価制度に迎合した働き方をして昇進したとて昇給幅が小さいです。これでは割に合わないですね。\n\n\n1.2. 成長できる環境を選びたい\nもう一つの理由としては、成長できる環境を選ぶ重要性を痛感したことです。\nvim-jp というエンジニアコミュニティで優秀な方々が日々議論している様子を見て、たまには自分も参加して、という関わりを楽しむようになって2年近く経ちました。たったそれだけで自分の技術力はグンと引き上げられています。やはりエンジニアにとって環境は大事ですね。\nこれだけ聞くと優秀な人材の多い会社に対するテイカーではないかと勘違いされてしまいそうですが、 自分のことを良いと思って採用してくれた会社にとっても伸び代が大きい方が嬉しい のではないでしょうか。"
  },
  {
    "objectID": "drafts/2024-01-28-looking-for-a-new-job.html#今後の予定",
    "href": "drafts/2024-01-28-looking-for-a-new-job.html#今後の予定",
    "title": "転職活動を始めました",
    "section": "2. 今後の予定",
    "text": "2. 今後の予定\n人生はあまりにも短いので迷っている場合ではありません。即断即決の精神で、今年 (2024年) 4月からは新しい会社で笑って過ごしたいと思っています。ただ、選考や退職交渉があるので延びるかもしれませんね。"
  },
  {
    "objectID": "posts/2024-01-28-microsoft-office-tips.html",
    "href": "posts/2024-01-28-microsoft-office-tips.html",
    "title": "Microsoft Office 向け Tips",
    "section": "",
    "text": "こんにちは。i9wa4 です。\n自分用に Microsoft Office 向けの Tips を書き残しておきます。"
  },
  {
    "objectID": "posts/2024-01-28-microsoft-office-tips.html#excel",
    "href": "posts/2024-01-28-microsoft-office-tips.html#excel",
    "title": "Microsoft Office 向け Tips",
    "section": "1. Excel",
    "text": "1. Excel\n\n1.1. Excel VBA\n\nアドイン追加先\n\n%USERPROFILE%\\AppData\\Roaming\\Microsoft\\AddIns\n\n\n\n\n1.2. Excel 関数\n\nシート名を記載したセルB2を利用したハイパーリンク作成\n\n=HYPERLINK(\"#'\"&B2&\"'!$A$1\",B2)"
  },
  {
    "objectID": "posts/2024-01-28-microsoft-office-tips.html#word",
    "href": "posts/2024-01-28-microsoft-office-tips.html#word",
    "title": "Microsoft Office 向け Tips",
    "section": "2. Word",
    "text": "2. Word\n\n2.1. Normal.dotm 作成\n\n%APPDATA%\\Microsoft\\Templates\\Normal.dotm 削除\nデザインを作成し既定に設定する\n\nテーマ設定\n\n見出し: 游ゴシック Arial\n本文: 游ゴシック Medium Arial\n\nアウトライン –&gt; 新しいアウトラインの定義 –&gt; オプション –&gt; レベルと対応付ける見出しスタイル\n本文: 10.5pt\n見出し 1: 18pt Bold"
  },
  {
    "objectID": "posts/2024-06-17-setup-mac.html",
    "href": "posts/2024-06-17-setup-mac.html",
    "title": "Mac 環境構築手順",
    "section": "",
    "text": "こんにちは。i9wa4 です。\n私の Mac 環境構築手順をまとめておきます。"
  },
  {
    "objectID": "posts/2024-06-17-setup-mac.html#システム設定",
    "href": "posts/2024-06-17-setup-mac.html#システム設定",
    "title": "Mac 環境構築手順",
    "section": "1. システム設定",
    "text": "1. システム設定\n\nマウスのスクロール方向変更\nプライバシーとセキュリティ\n\n画面収録とシステムオーディオ録音\n\n画面の収録とオーディオの録音を両方許可する\n\nChrome, Slack, Zoom\n\n\n\nデスクトップ\n\n壁紙をクリックしてデスクトップを表示\n\nステージマネージャー使用時のみ\n\n\nDock\n\n配置\n自動的に表示/非表示\n\nコントロールセンター\n\nBluetoothアイコンをメニューバーに表示する\nメニューバー\n\nメニューバーを自動的に非表示しない\n時計\n\n日付を常に表示\n秒を表示\n\n\n\nキーボード\n\n日本語入力が重いので設定見直す\n\nMacの日本語入力（日本語IM）が遅いのを解消する5のTips | 8vivid\n\nショートカット\n\n[macOS]キーボードでウィンドウを左半分や右半分に移動する - エンジニアによる投資"
  },
  {
    "objectID": "posts/2024-06-17-setup-mac.html#ターミナル",
    "href": "posts/2024-06-17-setup-mac.html#ターミナル",
    "title": "Mac 環境構築手順",
    "section": "2. ターミナル",
    "text": "2. ターミナル\n\nAlacritty を使う\n\nWezterm でもいいかもしれない"
  },
  {
    "objectID": "posts/2024-06-17-setup-mac.html#zsh",
    "href": "posts/2024-06-17-setup-mac.html#zsh",
    "title": "Mac 環境構築手順",
    "section": "3. Zsh",
    "text": "3. Zsh\n\nCtrl-R のコマンド履歴検索が実行できないとき\n\nzshで「control + R」をやってもコマンド履歴検索が実行できない場合の対処方法。 – 和洋風KAI\n\n~/.zshenv\n# あれば書く\n~/.zshrc\n# あれば書く"
  },
  {
    "objectID": "posts/2024-06-17-setup-mac.html#aws",
    "href": "posts/2024-06-17-setup-mac.html#aws",
    "title": "Mac 環境構築手順",
    "section": "4. AWS",
    "text": "4. AWS\n\n4.1. Okta 経由\n\nAWS アカウントにIAM Identity Center ユーザーポータル経由でサインインする方法\n\n\n\n4.2. AWS CLI 経由\n\nAWS CLIの最新バージョンのインストールまたは更新 - AWS Command Line Interface\n\nこれに従って AWS CLI をインストールする\n\n自動認証更新で IAM Identity Center AWS CLI トークンプロバイダーの認証情報を使用するようにを設定します - AWS Command Line Interface\nログイン (毎回やる必要なし)\naws sso login --profile xxx\n動作確認\naws ec2 describe-instances --profile xxx\ndefault profile の設定手順\n# ~/.zshrc 等に以下を記載しておく\nexport AWS_DEFAULT_PROFILE=\n\n# シェルの補完を使いながら以下のように入力する\nAWS_DEFAULT_PROFILE=xxx\naws ec2 describe-instances\naws s3 ls\n~/.aws/credentials の設定\n\nAccess Keys の説明を読む！"
  },
  {
    "objectID": "posts/2024-06-17-setup-mac.html#その他",
    "href": "posts/2024-06-17-setup-mac.html#その他",
    "title": "Mac 環境構築手順",
    "section": "5. その他",
    "text": "5. その他\n\n【Mac】.DS_Storeを一括削除&作らないようにするコマンド - Kizineko | Webフリーランス\nFinder\n\nよく使う項目 username 追加\nコマンド実行\n# Finderを終了させられるようにする (Command+Q で終了できるようになる)\ndefaults write com.apple.Finder QuitMenuItem -bool YES\n\n# 元に戻す場合\ndefaults write com.apple.Finder QuitMenuItem -bool NO\n\nプログラミング用フォント MyricaM をダウンロード・インストールする\nDocker Desktop の Docker Daemon 設定"
  },
  {
    "objectID": "posts/2024-06-17-setup-mac.html#おまけ-ショートカット集",
    "href": "posts/2024-06-17-setup-mac.html#おまけ-ショートカット集",
    "title": "Mac 環境構築手順",
    "section": "6. (おまけ) ショートカット集",
    "text": "6. (おまけ) ショートカット集\n\n\n\n\n\n\n\n\nカテゴリ\nショートカット\n説明\n\n\n\n\nウインドウ操作\nCommand + Tab\nアプリケーション切り替え\n\n\nウインドウ操作\nCommand + @\n同一アプリケーションの切り替え\n\n\nウインドウ操作\nCommand + Option + Arrow\nChrome タブ切り替え\n\n\nその他\nCommad + Q\nFinder 終了\n\n\nその他\nCommand + Ctrl + Q\nロック"
  },
  {
    "objectID": "posts/2024-01-28-git-tips.html",
    "href": "posts/2024-01-28-git-tips.html",
    "title": "Git 向け Tips",
    "section": "",
    "text": "こんにちは。i9wa4 です。\n自分用に Git 向けの Tips を書き残しておきます。"
  },
  {
    "objectID": "posts/2024-01-28-git-tips.html#よく使うコマンド",
    "href": "posts/2024-01-28-git-tips.html#よく使うコマンド",
    "title": "Git 向け Tips",
    "section": "1. よく使うコマンド",
    "text": "1. よく使うコマンド\ngit add -n .\ngit log --graph\ngit diff --name-only HEAD HEAD~2\ngit diff ID1 ID2 filename\ngit difftool ID1 ID2\ngit show ID\n\ngit reflog\ngit rebase"
  },
  {
    "objectID": "posts/2024-01-28-git-tips.html#リモートリポジトリ作成",
    "href": "posts/2024-01-28-git-tips.html#リモートリポジトリ作成",
    "title": "Git 向け Tips",
    "section": "2. リモートリポジトリ作成",
    "text": "2. リモートリポジトリ作成\ngit init --bare --shared\ngit remote add origin url\ngit clone url"
  },
  {
    "objectID": "posts/2024-01-01-init.html",
    "href": "posts/2024-01-01-init.html",
    "title": "Initial Post",
    "section": "",
    "text": "こんにちは。i9wa4 です。\n初投稿になります。"
  },
  {
    "objectID": "posts/2024-01-01-init.html#i9wa4-とは",
    "href": "posts/2024-01-01-init.html#i9wa4-とは",
    "title": "Initial Post",
    "section": "1. i9wa4 とは",
    "text": "1. i9wa4 とは\n\n読み：いくわよ\n仕事：データエンジニア・MLOpsエンジニア\n\n業務知識は個人公開が難しいものが多いのでブログでは関係ない話ばかりになりそうです。"
  },
  {
    "objectID": "posts/2024-01-01-init.html#このブログの運用方針",
    "href": "posts/2024-01-01-init.html#このブログの運用方針",
    "title": "Initial Post",
    "section": "2. このブログの運用方針",
    "text": "2. このブログの運用方針\n\n他サービスに流用するかもしれないけど記事の元データはここで一元管理したい\nこれまで色々書いてきた記事もここに集約していきたい"
  },
  {
    "objectID": "posts/2024-05-04-get-git-branch-name.vim.html",
    "href": "posts/2024-05-04-get-git-branch-name.vim.html",
    "title": "Vim script で Git ブランチ名を取得するプラグインを Gemini を使って書いてみた",
    "section": "",
    "text": "こんにちは。i9wa4 です。"
  },
  {
    "objectID": "posts/2024-05-04-get-git-branch-name.vim.html#経緯",
    "href": "posts/2024-05-04-get-git-branch-name.vim.html#経緯",
    "title": "Vim script で Git ブランチ名を取得するプラグインを Gemini を使って書いてみた",
    "section": "1. 経緯",
    "text": "1. 経緯\n私の Vim 設定では操作中のリポジトリのブランチ名を tabline に表示させていて、これは bash-completion に依存した実装となっています。この依存をなくし、ついでに依存をゼロにしようと思ったので Vim script でプラグインを書いてみようと思いました。\n.git ディレクトリを覗けば現在のブランチ名が分かるらしいことは知っていて、以下のリポジトリが自分のやりたいことであるということも知っている状態です。\nhttps://github.com/itchyny/vim-gitbranch\nGemini がどれくらい使えるか試してみたくて、上記リポジトリは見ずに進めてみます。"
  },
  {
    "objectID": "posts/2024-05-04-get-git-branch-name.vim.html#gemini-との開発過程",
    "href": "posts/2024-05-04-get-git-branch-name.vim.html#gemini-との開発過程",
    "title": "Vim script で Git ブランチ名を取得するプラグインを Gemini を使って書いてみた",
    "section": "2. Gemini との開発過程",
    "text": "2. Gemini との開発過程\nGemini とのやりとりを書き残しておきます。\n\n2.1. .git 探索関数作成\n\n2.1.1. 質問\nVim script で以下の関数を作成してほしいです。\n- あるディレクトリのパスを引数にとり、そこから順に上の階層をたどって、.git ディレクトリがあればそこで探索をやめて.gitディレクトリのパスを戻り値とする。見つからなければ空文字列を返す。\n\n\n2.1.2. 回答\nVim script で .git ディレクトリを探す関数\n\n以下の Vim script は、引数として渡されたディレクトリパスから順に上の階層をたどり、.git ディレクトリを見つけたらそのパスを返します。見つからなければ空文字列を返します。\n\nfunction! FindGitDir(dir)\n  \" 引数がない場合はカレントディレクトリを代入 \"\n  if (empty(a:dir))\n    let dir = expand('%:p')\n  endif\n\n  \" ループフラグを初期化 \"\n  let found = 0\n\n  \" 順に上の階層をたどる \"\n  while (!found && !empty(dir) && dir != '/')\n    \" .git ディレクトリが存在するか確認 \"\n    if (isdirectory(dir . '/.git'))\n      let found = 1\n      let gitdir = dir . '/.git'\n    endif\n\n    \" 上の階層へ移動 \"\n    let dir = expand(dirname(dir))\n  endwhile\n\n  \" 結果を返す \"\n  if (found)\n    return gitdir\n  else\n    return ''\n  endif\nendfunction\n\n\n\n2.2. ブランチ名取得関数作成\n\n2.2.1. 質問\nVim script で以下の関数を作成してほしいです。\n- .gitディレクトリのパスを引数にとり、.gitディレクトリを除いて現在のブランチ名を取得し、それを戻り値とする。\n\n\n2.2.2. 回答\n以下の Vim script は、.git ディレクトリのパスを引数にとり、.git ディレクトリを除いた現在のブランチ名を取得し、それを戻り値とします。\n\nfunction! GetCurrentBranch(gitdir)\n  \" 引数が空の場合、エラーを返す \"\n  if (empty(a:gitdir))\n    error('引数が空です')\n  endif\n\n  \" カレントブランチ名の取得 \"\n  let branch = system('git --git-dir=\"' . a:gitdir . '\" rev-parse --abbrev-ref HEAD')\n\n  \" .git ディレクトリを除いたブランチ名を返す \"\n  return substitute(branch, a:gitdir . '/', '', 'g')\nendfunction\n\n\n2.2.3. 質問\nsystem() を使わず、gitコマンドを使わずに実現させてほしいです。\n\n\n2.2.4. 回答\nVim script で system() や git コマンドを使わずに現在のブランチ名を取得するには、以下の方法があります。\n\n\n1. :echo %b コマンドを使用する\n\nこの方法は、最も簡単でシンプルな方法です。%b 変数は、現在選択されているバッファのブランチ名を表します。\n\n\" 現在のブランチ名をエコーする \"\n:echo %b\n\n\n2. expand('%:p:h') を使って .git/HEAD ファイルを読み込む\n\nこの方法は、より汎用的で、カレントバッファ以外のブランチ名を取得する場合にも使用できます。.git/HEAD ファイルには、現在のブランチ名が格納されています。\n\n\" .git/HEAD ファイルのパスを取得 \"\nlet headfile = expand('%:p:h') . '/.git/HEAD'\n\n\" HEAD ファイルの内容を読み込む \"\nlet headcontent = readfile(headfile)\n\n\" ブランチ名を抽出する \"\nlet branch = match(headcontent, 'ref: refs/heads/(.+)')\n\n\" 結果を確認 \"\necho \"現在のブランチ: \" . branch\n\n\n3. git log の出力を解析する\n\nこの方法は、より詳細なブランチ情報 (コミットハッシュなど) を取得する場合に役立ちます。\nVim Script\n\n\" git log の出力をバッファに読み込む \"\n:redir &gt; /dev/null git log -1\n\n\" ブランチ名を抽出する \"\nlet branch = match(v:buffer['[0]'], 'ref: refs/heads/(.+)')\n\n\" 結果を確認 \"\necho \"現在のブランチ: \" . branch\n回答1が嘘すぎてびっくり。今回は回答2がよさそう。\nこの時点で下記リポジトリを確認してみたところ回答2と同様の手法でブランチ名を取得しているようでした。\nhttps://github.com/itchyny/vim-gitbranch\nここまで分かればあとは動作を確認しながら書けそうです。"
  },
  {
    "objectID": "posts/2024-05-04-get-git-branch-name.vim.html#完成品",
    "href": "posts/2024-05-04-get-git-branch-name.vim.html#完成品",
    "title": "Vim script で Git ブランチ名を取得するプラグインを Gemini を使って書いてみた",
    "section": "3. 完成品",
    "text": "3. 完成品\nGemini と考えたコードが跡形もなくなっている。。なぜ。。\nTODO: 繰り返し呼ばれることを念頭に処理を軽くしたい\nhttps://github.com/i9wa4/get-git-branch-name.vim"
  },
  {
    "objectID": "posts/2024-02-04-chrome-tips.html",
    "href": "posts/2024-02-04-chrome-tips.html",
    "title": "Google Chrome 向け Tips",
    "section": "",
    "text": "こんにちは。i9wa4 です。\n自分用に Google Chrome 向けの Tips を書き残しておきます。"
  },
  {
    "objectID": "posts/2024-02-04-chrome-tips.html#検索エンジン設定",
    "href": "posts/2024-02-04-chrome-tips.html#検索エンジン設定",
    "title": "Google Chrome 向け Tips",
    "section": "1. 検索エンジン設定",
    "text": "1. 検索エンジン設定\n\nGoogle 日本語検索\n\nhttps://www.google.com/search?q=%s\n\nGoogle 英語検索\n\nhttps://www.google.com/search?q=%s&gl=us&hl=en&gws_rd=cr&pws=0\n\nDuckDuckGo 日本語検索\n\nhttps://duckduckgo.com/?q=%s&kl=jp-jp&kz=-1&kav=1&kaf=1&k1=-1&ia=web\n\nDuckDuckGo 英語検索\n\nhttps://duckduckgo.com/?q=%s&kl=us-en&kz=-1&kav=1&kaf=1&k1=-1&ia=web"
  },
  {
    "objectID": "posts/2024-06-17-purchased-gadgets.html",
    "href": "posts/2024-06-17-purchased-gadgets.html",
    "title": "購入したガジェットの紹介",
    "section": "",
    "text": "こんにちは。i9wa4 です。\n詳細まで書くかは決めていませんが、これまで購入したガジェット一覧を作っておきます。\n\n\n\nTable 1: 購入ガジェット一覧\n\n\n\n\n\n購入日\nブランド\n製品名\n\n\n\n\n2019/07/01\nLogicool\nPebble M350\n\n\n2020/07/19\nPFU\nHHKB Professional HYBRID Type-S 英語配列／墨\n\n\n2022/03/12\nLogicool\nERGO M575\n\n\n2022/12/05\nKensington\nスリムブレードトラックボール\n\n\n2023/03/05\nGoogle\nPixel 6a\n\n\n2023/03/12\nSONY\nWF-1000XM4\n\n\n2023/08/05\nBeelink\nBeelink SEi10 Mini PC\n\n\n2024/02/28\nAnker\nAnker PowerExpand 6-in-1 USB-C PD イーサネット ハブ\n\n\n2024/03/02\nLenovo\nThinkPad T14s Gen 4 (AMD)\n\n\n2024/04/05\nShokz\nOpenRun Pro Mini\n\n\n2024/05/06\nFitbit\nFitbit Charge 6\n\n\n2024/06/03\nDell\nDell 27 USB-C モニター - S2722DC\n\n\n2024/06/07\nLogicool\nC270n HDウェブカメラ"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Blog",
    "section": "",
    "text": "購入したガジェットの紹介\n\n\n\n\n\n\n\n\n2024-06-17\n\n\n\n\n\n\n\nMac 環境構築手順\n\n\n\n\n\n\n\n\n2024-06-17\n\n\n\n\n\n\n\nQuarto で作ったスライドを GitHub Pages にデプロイする\n\n\n\n\n\n\n\n\n2024-05-04\n\n\n\n\n\n\n\nVim script で Git ブランチ名を取得するプラグインを Gemini を使って書いてみた\n\n\n\n\n\n\n\n\n2024-05-03\n\n\n\n\n\n\n\nデータサイエンス100本ノックの実行環境構築 (WSL2)\n\n\n\n\n\n\n\n\n2024-03-25\n\n\n\n\n\n\n\nWSL2 のセットアップ\n\n\n\n\n\n\n\n\n2024-03-25\n\n\n\n\n\n\n\nPostgreSQL 向け Tips\n\n\n\n\n\n\n\n\n2024-02-04\n\n\n\n\n\n\n\nGoogle Chrome 向け Tips\n\n\n\n\n\n\n\n\n2024-02-04\n\n\n\n\n\n\n\nGit 向け Tips\n\n\n\n\n\n\n\n\n2024-01-28\n\n\n\n\n\n\n\nMicrosoft Office 向け Tips\n\n\n\n\n\n\n\n\n2024-01-28\n\n\n\n\n\n\n\nefm-langserver を Vim/Neovim で利用する\n\n\n\n\n\n\n\n\n2024-01-27\n\n\n\n\n\n\n\n自作 Vim/Neovim プラグイン markdown-number-header.vim の紹介\n\n\n\n\n\n\n\n\n2024-01-02\n\n\n\n\n\n\n\nGitHub Pages (Jekyll) blog のタグ追加対応\n\n\n\n\n\n\n\n\n2024-01-02\n\n\n\n\n\n\n\nInitial Post\n\n\n\n\n\n\n\n\n2023-12-31\n\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "名前\ni9wa4 (いくわよ)\n\n\n職種\nデータエンジニア / MLOps エンジニア\n\n\n好きなエディタ\nVim\n\n\n好きなお酒\nサントリー山崎"
  },
  {
    "objectID": "posts/2024-01-02-jelyll-adjust.html",
    "href": "posts/2024-01-02-jelyll-adjust.html",
    "title": "GitHub Pages (Jekyll) blog のタグ追加対応",
    "section": "",
    "text": "こんにちは。i9wa4 です。\nブログを作ったので少しだけ機能と見た目を手入れしてみました。"
  },
  {
    "objectID": "posts/2024-01-02-jelyll-adjust.html#調整前",
    "href": "posts/2024-01-02-jelyll-adjust.html#調整前",
    "title": "GitHub Pages (Jekyll) blog のタグ追加対応",
    "section": "1. 調整前",
    "text": "1. 調整前\n\n現在 Jekyll (GitHub Pages) の Minima (jekyll/minima: Minima is a one-size-fits-all Jekyll theme for writers.) が適用されている状態\n\nHTML ファイルが必要になったらここから持ってくる！"
  },
  {
    "objectID": "posts/2024-01-02-jelyll-adjust.html#やりたいこと",
    "href": "posts/2024-01-02-jelyll-adjust.html#やりたいこと",
    "title": "GitHub Pages (Jekyll) blog のタグ追加対応",
    "section": "2. やりたいこと",
    "text": "2. やりたいこと\n\nタグ対応\n\nタグ毎の一覧ページの追加\nトップページに各タグの一覧ページへのリンク追加\n各記事にて付与したタグの一覧ページリンクの追加\n\nリポジトリルートの Markdown ファイルへのリンクがヘッダに追加されてしまうためヘッダの記述の簡素化"
  },
  {
    "objectID": "posts/2024-01-02-jelyll-adjust.html#タグ対応",
    "href": "posts/2024-01-02-jelyll-adjust.html#タグ対応",
    "title": "GitHub Pages (Jekyll) blog のタグ追加対応",
    "section": "3. タグ対応",
    "text": "3. タグ対応\n\nsyudead さんの記事とリポジトリを参考に実装しました。私は HTML ではなく Markdown 中心の構成としたかったのであくまで参考という感じです。\n\nJekyllのブログでタグ機能を実装する\n\n各記事へのタグ付け方法\n一覧ページの html 記述\n\nsyudead/syudead.github.io\n\nページ一覧の作成方法\n\n./_inclides/tag.html を ./blog.html などの一覧ページ内にて include する\n\n各記述でのタグ一覧ページリンク表示\n\n./_layouts/post.html 参照\n\n\n\nトップページに各タグの一覧ページへのリンクを追加する対応については ./index.md に地道にリンクを追加する方法を取ることとしました。"
  },
  {
    "objectID": "posts/2024-01-02-jelyll-adjust.html#ヘッダ簡素化",
    "href": "posts/2024-01-02-jelyll-adjust.html#ヘッダ簡素化",
    "title": "GitHub Pages (Jekyll) blog のタグ追加対応",
    "section": "4. ヘッダ簡素化",
    "text": "4. ヘッダ簡素化\n\nMinima の HTML ファイル (minima/_includes/header.html at master · jekyll/minima) をリポジトリに追加して対象箇所を削除すれば OK。\n\n(2024/01/28 追記) スマホ版のハンバーガーメニューが寂しかったのでヘッダ簡素化は取りやめました。"
  },
  {
    "objectID": "posts/2024-01-02-jelyll-adjust.html#感想",
    "href": "posts/2024-01-02-jelyll-adjust.html#感想",
    "title": "GitHub Pages (Jekyll) blog のタグ追加対応",
    "section": "5. 感想",
    "text": "5. 感想\n\n必要最低限の機能は実装できたので割と満足です。\n見た目をちゃんと調整しようとすると HTML や CSS の調整が必要になってきますが、あんまりやりたくないので当面このままでいきます。"
  },
  {
    "objectID": "posts/2024-01-02-vim-plugin-mnh.html",
    "href": "posts/2024-01-02-vim-plugin-mnh.html",
    "title": "自作 Vim/Neovim プラグイン markdown-number-header.vim の紹介",
    "section": "",
    "text": "こんにちは。i9wa4 です。\n少し前に作った Vim/Neovim プラグインの紹介記事となります。"
  },
  {
    "objectID": "posts/2024-01-02-vim-plugin-mnh.html#プラグイン概要",
    "href": "posts/2024-01-02-vim-plugin-mnh.html#プラグイン概要",
    "title": "自作 Vim/Neovim プラグイン markdown-number-header.vim の紹介",
    "section": "1. プラグイン概要",
    "text": "1. プラグイン概要\n\nhttps://github.com/i9wa4/markdown-number-header.vim\n\nMarkdown の見出し番号を付ける or 更新するプラグインです。\nDeno と Denops に依存しています。"
  },
  {
    "objectID": "posts/2024-01-02-vim-plugin-mnh.html#プラグインを作ることになったきっかけ",
    "href": "posts/2024-01-02-vim-plugin-mnh.html#プラグインを作ることになったきっかけ",
    "title": "自作 Vim/Neovim プラグイン markdown-number-header.vim の紹介",
    "section": "2. プラグインを作ることになったきっかけ",
    "text": "2. プラグインを作ることになったきっかけ\nMarkdown All in One という VSCode 拡張の Markdown 見出し番号を付ける機能を Vim でも使いたかったのですが、CLI アプリケーション (Formatter) や Vim プラグインを探しても見つからなかったので自作しようと思い至りました。"
  },
  {
    "objectID": "posts/2024-01-02-vim-plugin-mnh.html#denops-プラグインとして作ろうと思った理由",
    "href": "posts/2024-01-02-vim-plugin-mnh.html#denops-プラグインとして作ろうと思った理由",
    "title": "自作 Vim/Neovim プラグイン markdown-number-header.vim の紹介",
    "section": "3. Denops プラグインとして作ろうと思った理由",
    "text": "3. Denops プラグインとして作ろうと思った理由\nまず、自分が Vim 上でしか使わないため CLI アプリケーションとしてではなく Vim プラグインとして作ろうとは思ってました。\nそして私は Vim 使いなので Vim script で書くか Denops プラグインとして TypeScript で書くかの二択で、楽しそうなので後者を選びました。"
  },
  {
    "objectID": "posts/2024-01-02-vim-plugin-mnh.html#denops-プラグイン開発体験について",
    "href": "posts/2024-01-02-vim-plugin-mnh.html#denops-プラグイン開発体験について",
    "title": "自作 Vim/Neovim プラグイン markdown-number-header.vim の紹介",
    "section": "4. Denops プラグイン開発体験について",
    "text": "4. Denops プラグイン開発体験について\n初めて Denops プラグインを作ったし、しかも TypeScript にも触れたことがなかったのですが意外と困ることは少なかったです。\n核となる見出し番号を振る処理は TypeScript の本領発揮という感じで楽に書けましたね。\nまず以下のドキュメントに従ってチュートリアルを終えて、あとは先人の Denops プラグインのリポジトリを覗いてお作法を学びつつプラグインを完成させました。\n\n参考ページ:\n\nDeno で Vim/Neovim のプラグインを書く (denops.vim) | Zenn\nIntroduction - Denops Documentation (英語版)"
  },
  {
    "objectID": "posts/2024-01-02-vim-plugin-mnh.html#感想",
    "href": "posts/2024-01-02-vim-plugin-mnh.html#感想",
    "title": "自作 Vim/Neovim プラグイン markdown-number-header.vim の紹介",
    "section": "5. 感想",
    "text": "5. 感想\n今も毎日使っているプラグインなので「無いんだったら作ればいい」精神でフッ軽に作れたことを嬉しく思ってます。\n今後も必要なものは自分で作っていたいですね。"
  },
  {
    "objectID": "posts/2024-03-25-setup-wsl2.html",
    "href": "posts/2024-03-25-setup-wsl2.html",
    "title": "WSL2 のセットアップ",
    "section": "",
    "text": "こんにちは。i9wa4 です。\nWindows マシンを新調する度に WSL2 をインストールしているので手順を書き残しておきます。"
  },
  {
    "objectID": "posts/2024-03-25-setup-wsl2.html#wsl-コマンドのインストール",
    "href": "posts/2024-03-25-setup-wsl2.html#wsl-コマンドのインストール",
    "title": "WSL2 のセットアップ",
    "section": "1. WSL コマンドのインストール",
    "text": "1. WSL コマンドのインストール\nWSL のインストール | Microsoft Learn に従います。\n\n管理者権限で PowerShell or コマンドプロンプトを開きます。\nwsl --install を実行します。 \n以下のように表示されるのでマシンを再起動します。"
  },
  {
    "objectID": "posts/2024-03-25-setup-wsl2.html#ディストリビューションのインストール",
    "href": "posts/2024-03-25-setup-wsl2.html#ディストリビューションのインストール",
    "title": "WSL2 のセットアップ",
    "section": "2. ディストリビューションのインストール",
    "text": "2. ディストリビューションのインストール\n\nPowerShell or コマンドプロンプトを開きます。\nインストール可能なディストリビューションを表示します。\nwsl --list --oneline\nUbuntu 22.04 LTS をインストールする場合は以下のように入力します。\nwsl --install -d Ubuntu-22.04\n画面表示に従ってユーザー名とパスワードを入力します。\nUbuntu を終了します。\nexit\n(必要に応じて) 既定のディストリビューションを設定します。\nwsl --set-default Ubuntu-22.04"
  },
  {
    "objectID": "posts/2024-03-25-setup-wsl2.html#ディストリビューションのアンインストール",
    "href": "posts/2024-03-25-setup-wsl2.html#ディストリビューションのアンインストール",
    "title": "WSL2 のセットアップ",
    "section": "3. ディストリビューションのアンインストール",
    "text": "3. ディストリビューションのアンインストール\n\nPowerShell or コマンドプロンプトを開きます。\nインストール済みのディストリビューションを表示します。\nwsl --list\n不要なディストリビューションをアンインストールします。\nwsl --unregister Ubuntu-22.04"
  },
  {
    "objectID": "posts/2024-02-04-posgresql-tips.html",
    "href": "posts/2024-02-04-posgresql-tips.html",
    "title": "PostgreSQL 向け Tips",
    "section": "",
    "text": "こんにちは。i9wa4 です。\n自分用に PostgreSQL 向けの Tips を書き残しておきます。"
  },
  {
    "objectID": "posts/2024-02-04-posgresql-tips.html#postgresql-起動データベースへのアクセス",
    "href": "posts/2024-02-04-posgresql-tips.html#postgresql-起動データベースへのアクセス",
    "title": "PostgreSQL 向け Tips",
    "section": "1. PostgreSQL 起動～データベースへのアクセス",
    "text": "1. PostgreSQL 起動～データベースへのアクセス\nいつも忘れるので取っかかりとしてコマンドを書いておきます。\npg_ctl restart\npsql -U postgres -d db_name\n\npg_ctl restart\npsql -U postgres\nCREATE DATABASE db_name;\n\\c db_name\nCREATE SCHEMA sc_name;"
  },
  {
    "objectID": "posts/2024-05-05-deploy-quarto.html",
    "href": "posts/2024-05-05-deploy-quarto.html",
    "title": "Quarto で作ったスライドを GitHub Pages にデプロイする",
    "section": "",
    "text": "こんにちは。i9wa4 です。"
  },
  {
    "objectID": "posts/2024-05-05-deploy-quarto.html#前提",
    "href": "posts/2024-05-05-deploy-quarto.html#前提",
    "title": "Quarto で作ったスライドを GitHub Pages にデプロイする",
    "section": "1. 前提",
    "text": "1. 前提\nスライドをできるだけ Git で管理したいので Markdown をスライドに変換する方向性で色々なツールを比較検討していて、 Quarto (https://quarto.org/) に決めました。\n.qmd ファイルという見慣れないファイルを利用しますが、利点としては以下ですね。 - 環境構築が pip で完了する - VS Code で開くと Jupyter Notebook っぽくセルを実行できる"
  },
  {
    "objectID": "posts/2024-05-05-deploy-quarto.html#やったこと",
    "href": "posts/2024-05-05-deploy-quarto.html#やったこと",
    "title": "Quarto で作ったスライドを GitHub Pages にデプロイする",
    "section": "2. やったこと",
    "text": "2. やったこと\n下記リポジトリを整備しました。\nhttps://github.com/i9wa4/slides\nREADME.md にも書いてますが\nQuartoでスライドを作ってGitHub Pagesで公開する #GitHubActions - Qiita\nを参考にしてます。"
  },
  {
    "objectID": "posts/2024-05-05-deploy-quarto.html#感想",
    "href": "posts/2024-05-05-deploy-quarto.html#感想",
    "title": "Quarto で作ったスライドを GitHub Pages にデプロイする",
    "section": "3. 感想",
    "text": "3. 感想\nGitHub Actions はまだよく分かってないままなのですが、一旦動くようになってよかったです。\nスライド一覧に関しては Gemini も意外とやるじゃんと思いました。質問しながらコードの不備を指摘すると正しいコードを書いてくれますね。"
  },
  {
    "objectID": "posts/2024-01-27-setup-efm-langserver.html",
    "href": "posts/2024-01-27-setup-efm-langserver.html",
    "title": "efm-langserver を Vim/Neovim で利用する",
    "section": "",
    "text": "こんにちは。i9wa4 です。\n最近 Vim と Neovim に efm-langserver を導入したので手順を説明していきます。"
  },
  {
    "objectID": "posts/2024-01-27-setup-efm-langserver.html#efm-langserver-とは",
    "href": "posts/2024-01-27-setup-efm-langserver.html#efm-langserver-とは",
    "title": "efm-langserver を Vim/Neovim で利用する",
    "section": "1. efm-langserver とは",
    "text": "1. efm-langserver とは\nmattn さんの記事を見るのが最良ですね。\nBig Sky :: Lint ツールを Language Server に対応させるコマンド efm-langserver 作った。\n\nどんな言語であろうとも Lint ツールが grep と同様の形式で結果を出力してくれさえすれば Language Server にしてしまうコマンド\n\nLinter をインストールした後 Vim/Neovim で Info や Error を画面内に表示させたいときに efm-langserver が活用できると思えばよいです。"
  },
  {
    "objectID": "posts/2024-01-27-setup-efm-langserver.html#efm-langserver-のインストール",
    "href": "posts/2024-01-27-setup-efm-langserver.html#efm-langserver-のインストール",
    "title": "efm-langserver を Vim/Neovim で利用する",
    "section": "2. efm-langserver のインストール",
    "text": "2. efm-langserver のインストール\nUbuntu 22.04 (WSL2) でのインストール手順を記載しておきます。\nGo 言語を Go Wiki: Ubuntu - The Go Programming Language に従ってインストールします。\nsudo add-apt-repository -y ppa:longsleep/golang-backports\nsudo apt update\nsudo apt install -y golang-go\nefm-langserver を GitHub - mattn/efm-langserver: General purpose Language Server に従ってインストールします。\ngo install github.com/mattn/efm-langserver@latest\n~/.profile などに以下を追記して PATH を通しておきます。\nexport PATH=\"${HOME}\"/go/bin:\"${PATH}\""
  },
  {
    "objectID": "posts/2024-01-27-setup-efm-langserver.html#config.yaml-の作成",
    "href": "posts/2024-01-27-setup-efm-langserver.html#config.yaml-の作成",
    "title": "efm-langserver を Vim/Neovim で利用する",
    "section": "3. config.yaml の作成",
    "text": "3. config.yaml の作成\nefm-langserver 用設定ファイル $XDG_CONFIG_HOME/efm-langserver/config.yaml に必要な設定を記述していきます。\nREADME を参考に shellcheck を使うための設定のみ抽出したものが以下です。\nversion: 2\nroot-markers:\n  - .git/\nlint-debounce: 1s\n\ntools:\n  sh-shellcheck: &sh-shellcheck\n    lint-command: 'shellcheck -f gcc -x'\n    lint-source: 'shellcheck'\n    lint-formats:\n      - '%f:%l:%c: %trror: %m'\n      - '%f:%l:%c: %tarning: %m'\n      - '%f:%l:%c: %tote: %m'\n\nlanguages:\n  sh:\n    - &lt;&lt;: *sh-shellcheck"
  },
  {
    "objectID": "posts/2024-01-27-setup-efm-langserver.html#vim-の設定",
    "href": "posts/2024-01-27-setup-efm-langserver.html#vim-の設定",
    "title": "efm-langserver を Vim/Neovim で利用する",
    "section": "4. Vim の設定",
    "text": "4. Vim の設定\nプラグインマネージャー dein.vim や dpp.vim などで採用されている TOML ファイルでのプラグイン設定箇所を抽出しました。遅延起動設定はお好みで。\n[[plugins]]\nrepo = 'prabirshrestha/vim-lsp'\non_event = ['VimEnter']\n\n[[plugins]]\nrepo = 'mattn/vim-lsp-settings'\non_source = ['vim-lsp']\nhook_source = '''\nlet g:lsp_auto_enable = 1\nlet g:lsp_log_file = ''\nlet g:lsp_settings = {\n  \\   'efm-langserver': {\n  \\     'disabled': v:false,\n  \\     'allowlist': ['sh'],\n  \\   }\n  \\ }\n'''"
  },
  {
    "objectID": "posts/2024-01-27-setup-efm-langserver.html#neovim-の設定",
    "href": "posts/2024-01-27-setup-efm-langserver.html#neovim-の設定",
    "title": "efm-langserver を Vim/Neovim で利用する",
    "section": "5. Neovim の設定",
    "text": "5. Neovim の設定\nVim 同様に TOML ファイルの記述を抽出しました。こちらも遅延起動設定はお好みで。\n[[plugins]]\nrepo = 'neovim/nvim-lspconfig'\non_event = ['VimEnter']\nlua_source = '''\nlocal lspconfig = require('lspconfig')\nlspconfig.efm.setup{}\n'''"
  },
  {
    "objectID": "posts/2024-01-27-setup-efm-langserver.html#感想",
    "href": "posts/2024-01-27-setup-efm-langserver.html#感想",
    "title": "efm-langserver を Vim/Neovim で利用する",
    "section": "6. 感想",
    "text": "6. 感想\nLinter をインストールできていれば出力形式を見て自力で Language Server として組み込める……素晴らしいですね！\nLinter は手動でインストールして設定ファイルを管理しておくのが結局一番分かりやすいなと実感しているのですが、その状態で簡単に Vim/Neovim に反映できる efm-langserver はかなり有り難いです。"
  },
  {
    "objectID": "posts/2024-03-26-setup-ds100knock.html",
    "href": "posts/2024-03-26-setup-ds100knock.html",
    "title": "データサイエンス100本ノックの実行環境構築 (WSL2)",
    "section": "",
    "text": "こんにちは。i9wa4 です。\n下記リポジトリを見てください。以上。\nhttps://github.com/i9wa4/wsl2-100knocks-preprocess"
  },
  {
    "objectID": "drafts/2024-03-24-resignation.html",
    "href": "drafts/2024-03-24-resignation.html",
    "title": "転職活動終了！",
    "section": "",
    "text": "こんにちは。i9wa4 です。\n先日転職活動を開始 しておりましたが、2/29に転職活動を終えて、3/31退職、4/1入社のスケジュールで動いてます。\n近況を簡単に報告できればと思います。"
  },
  {
    "objectID": "drafts/2024-03-24-resignation.html#転職活動結果",
    "href": "drafts/2024-03-24-resignation.html#転職活動結果",
    "title": "転職活動終了！",
    "section": "1. 転職活動結果",
    "text": "1. 転職活動結果\n5社受けて1社は書類選考落ち、4社から内定を頂きました。\n自分はそこまでスキルも経験値もありませんが、データエンジニアは不足しているので結構引く手が多かったのかなと思いますね。"
  },
  {
    "objectID": "drafts/2024-03-24-resignation.html#退職について",
    "href": "drafts/2024-03-24-resignation.html#退職について",
    "title": "転職活動終了！",
    "section": "2. 退職について",
    "text": "2. 退職について\n今の時代当たり前だと思いますが特に引き留めもなくスムーズに進みました。\nSESの形で勤務していたので自社での引き継ぎ作業はほとんどなく、客先での引き継ぎ中心に3月末まで作業を行います。\n客先の社員さんと仲良くなって連絡先を交換できたのが嬉しかったですね。\nこの先も付き合いが続けられるといいなぁ。"
  },
  {
    "objectID": "drafts/2024-03-24-resignation.html#転職先について",
    "href": "drafts/2024-03-24-resignation.html#転職先について",
    "title": "転職活動終了！",
    "section": "3. 転職先について",
    "text": "3. 転職先について\n様々な点を考慮し今の自分が得られる経験を最大化できる会社に決めることができたかなと思います。\n数年後にデータエンジニア (サブ的に MLOps エンジニア) としての存在感を高めつつマネジメント経験もそれなりに積めれば嬉しいです。"
  }
]